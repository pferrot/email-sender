<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:amq="http://activemq.apache.org/schema/core"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	   http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd">
	
	
	<bean id="emailSender.mailManager" class="com.pferrot.emailsender.manager.impl.MailManagerImpl">
		<property name="javaMailSender" ref="emailSender.javaMailSender" />
		<property name="velocityEngine" ref="emailSender.velocityEngine" />
		<property name="emailToSendProducer" ref="emailSender.emailToSendProducer" />
	</bean>
	
	<bean id="emailSender.velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>  
     			resource.loader=class  
     			class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader  
    		</value>
		</property>
	</bean>
	
	
	<!-- this is the Message Driven POJO (MDP) -->	
	<bean id="emailSender.emailToSendProducer" class="com.pferrot.emailsender.jms.EmailToSendProducer">
		<property name="jmsTemplate" ref="emailSender.jmsTemplate" />
		<property name="destination" ref="emailSender.destination" />
	</bean>
	
	<bean id="emailSender.emailToSendConsumer" class="com.pferrot.emailsender.jms.EmailToSendConsumer">
		<property name="mailManager" ref="emailSender.mailManager" />
	</bean>
	
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
	    <property name="connectionFactory" ref="emailSender.activeMQConnectionFactory"/>
	    <property name="destination" ref="emailSender.destination"/>
	    <property name="messageListener" ref="emailSender.emailToSendConsumer" />
	    <property name="sessionTransacted" value="true"/>
	</bean>	

	<!-- and this is the message listener container -->
<!--	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
<!--		<property name="connectionFactory" ref="emailSender.activeMQConnectionFactory" />-->
<!--		<property name="destination" ref="destination" />-->
<!--		<property name="messageListener" ref="emailSender.emailToSendListener" />-->
<!--	</bean>-->
	
<!--	<bean id="emailSender.activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
<!--		<property name="brokerURL">-->
<!--			<value>tcp://localhost:61616</value>-->
<!--		</property>-->
<!--	</bean>-->
	
<!--	<bean id="sampleTopic" class="org.apache.activemq.command.ActiveMQTopic">-->
<!--	</bean>-->
	
	<bean id="emailSender.jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="emailSender.activeMQConnectionFactory" />
	</bean>	
	
    <!--  lets create an embedded ActiveMQ Broker -->
	<amq:broker useJmx="false" brokerName="broker1" persistent="true">
		<amq:persistenceAdapter>
			<amq:amqPersistenceAdapter directory="activemq-data" maxFileLength="32mb"/>
		</amq:persistenceAdapter>
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>		
	</amq:broker>

    <!--  ActiveMQ destinations to use  -->
	<amq:queue id="emailSender.destination"
		physicalName="com.pferrot.email-sender.RegistrationEmailorg.apache.activemq.spring.Test.spring.embedded" />
	
	<!--
		JMS ConnectionFactory to use, configuring the embedded broker using
		XML
	-->
	<amq:connectionFactory id="emailSender.activeMQConnectionFactory" brokerURL="vm://localhost" />
	
</beans>